options {
	STATIC = false;
	//ERROR_REPORTING = true;
	//DEBUG_TOKEN_MANAGER = true;
}

PARSER_BEGIN(Parser)

package br.univali.ttoproject.compiler.parser;

public class Parser {

}

PARSER_END(Parser)

SKIP :
{
  <" ">
| <"\t">
| <"\n">
| <"\r">
|< ":-" (~["\r", "\n"])* >
| < "/*" > : BLOCK_COMMENT_STATE
}

<BLOCK_COMMENT_STATE> SKIP :
{
  < "*/" > : DEFAULT
| < ~[] >
}

/* KEY WORDS */
TOKEN [IGNORE_CASE]:
{
  <PROGRAM: "program">
| <DEFINE: "define">
| <NOT: "not">
| <VARIABLE: "variable">
| <IS: "is">
| <NATURAL: "natural">
| <REAL: "real">
| <CHAR: "char">
| <BOOLEAN: "boolean">
| <EXECUTE: "execute">
| <SET: "set">
| <TO: "to">
| <GET: "get">
| <PUT: "put">
| <VERIFY: "verify">
| <TRUE: "true">
| <FALSE: "false">
| <LOOP: "loop">
| <WHILE: "while">
| <DO: "do">
}

/* SPECIAL SYMBOLS */
TOKEN :
{
  <LBRACE: "{">
| <RBRACE: "}">
| <PARENTHESESL: "(">
| <PARANTHESESR: ")">
| <DOT: ".">
| <COMMA: ",">
| <PLUS: "+">
| <MINUS: "-">
| <POWER: "**">
| <MULTIPLICATION: "*">
| <DIVISION: "/">
| <ENTIRE_DIVISION: "%">
| <REST: "%%">
| <EQUAL: "==">
| <DIFFERENT: "!=">
| <SMALLER: "<">
| <LARGER: ">">
| <SMALLER_EQUAL: "<=">
| <LARGER_EQUAL: ">=">
| <AND: "&">
| <OR: "|">
| <NOT_SYMBOL: "!">
}

/* IDENTIFIERS */
TOKEN :
{
    <IDENTIFIER: <LETTER> (<LETTER>|<UNSIGNED>)+>
|   <LETTER: ["_","a"-"z","A"-"Z"]>
|   <UNSIGNED: (["0" - "9"])+ >
|   <SIGNED: ("-")? (["0" - "9"])+>
|   <REAL_UNSIGNED: <UNSIGNED>"."<UNSIGNED>>
|   <REAL_SIGNED: <SIGNED>"."<UNSIGNED>>
//|   <VALUE: (<LETTER>|<SIGNED>)+ >
//|   <NOT_VARIABLE: (<NATURAL>|<REAL>|<CHAR>|<BOOLEAN>) <IDENTIFIER> <VALUE> >
}

/* LITERALS */
TOKEN : {
    <STRING : ("'"  (~["\n","\r"])*  "'") | ("\""  (~["\n","\r"])*  "\"")>
}

<*> TOKEN : { <UNKNOWN: ~[]> }
