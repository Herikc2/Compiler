/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package br.univali.ttoproject.compiler.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 9;
  /** RegularExpression Id. */
  int DEFINE = 10;
  /** RegularExpression Id. */
  int NOT = 11;
  /** RegularExpression Id. */
  int VARIABLE = 12;
  /** RegularExpression Id. */
  int IS = 13;
  /** RegularExpression Id. */
  int NATURAL_TYPE = 14;
  /** RegularExpression Id. */
  int REAL_TYPE = 15;
  /** RegularExpression Id. */
  int CHAR_TYPE = 16;
  /** RegularExpression Id. */
  int BOOLEAN_TYPE = 17;
  /** RegularExpression Id. */
  int EXECUTE = 18;
  /** RegularExpression Id. */
  int SET = 19;
  /** RegularExpression Id. */
  int TO = 20;
  /** RegularExpression Id. */
  int GET = 21;
  /** RegularExpression Id. */
  int PUT = 22;
  /** RegularExpression Id. */
  int VERIFY = 23;
  /** RegularExpression Id. */
  int TRUE = 24;
  /** RegularExpression Id. */
  int FALSE = 25;
  /** RegularExpression Id. */
  int LOOP = 26;
  /** RegularExpression Id. */
  int WHILE = 27;
  /** RegularExpression Id. */
  int DO = 28;
  /** RegularExpression Id. */
  int HEADER = 29;
  /** RegularExpression Id. */
  int LBRACE = 30;
  /** RegularExpression Id. */
  int RBRACE = 31;
  /** RegularExpression Id. */
  int LBRACKET = 32;
  /** RegularExpression Id. */
  int RBRACKET = 33;
  /** RegularExpression Id. */
  int PARENTHESESL = 34;
  /** RegularExpression Id. */
  int PARANTHESESR = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int PLUS = 38;
  /** RegularExpression Id. */
  int MINUS = 39;
  /** RegularExpression Id. */
  int POWER = 40;
  /** RegularExpression Id. */
  int MULTIPLICATION = 41;
  /** RegularExpression Id. */
  int DIVISION = 42;
  /** RegularExpression Id. */
  int INTEGER_DIVISION = 43;
  /** RegularExpression Id. */
  int REST = 44;
  /** RegularExpression Id. */
  int EQUAL = 45;
  /** RegularExpression Id. */
  int DIFFERENT = 46;
  /** RegularExpression Id. */
  int SMALLER = 47;
  /** RegularExpression Id. */
  int LARGER = 48;
  /** RegularExpression Id. */
  int SMALLER_EQUAL = 49;
  /** RegularExpression Id. */
  int LARGER_EQUAL = 50;
  /** RegularExpression Id. */
  int AND = 51;
  /** RegularExpression Id. */
  int OR = 52;
  /** RegularExpression Id. */
  int NOT_SYMBOL = 53;
  /** RegularExpression Id. */
  int IDENTIFIER = 54;
  /** RegularExpression Id. */
  int CHAR_CONST = 55;
  /** RegularExpression Id. */
  int NATURAL_CONST = 56;
  /** RegularExpression Id. */
  int REAL_CONST = 57;
  /** RegularExpression Id. */
  int BOOLEAN_CONST = 58;
  /** RegularExpression Id. */
  int LETTER = 59;
  /** RegularExpression Id. */
  int INTEGER = 60;
  /** RegularExpression Id. */
  int REAL = 61;
  /** RegularExpression Id. */
  int UNKNOWN = 62;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int BLOCK_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "\"program\"",
    "\"define\"",
    "\"not\"",
    "\"variable\"",
    "\"is\"",
    "\"natural\"",
    "\"real\"",
    "\"char\"",
    "\"boolean\"",
    "\"execute\"",
    "\"set\"",
    "\"to\"",
    "\"get\"",
    "\"put\"",
    "\"verify\"",
    "\"true\"",
    "\"false\"",
    "\"loop\"",
    "\"while\"",
    "\"do\"",
    "\":-\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"**\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"%%\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "<IDENTIFIER>",
    "<CHAR_CONST>",
    "<NATURAL_CONST>",
    "<REAL_CONST>",
    "<BOOLEAN_CONST>",
    "<LETTER>",
    "<INTEGER>",
    "<REAL>",
    "<UNKNOWN>",
  };

}
